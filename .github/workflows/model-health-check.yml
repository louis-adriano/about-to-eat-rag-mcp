# .github/workflows/model-health-check.yml
name: Daily Model Health Check

on:
  schedule:
    # Run every day at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  check-models:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run model health check
      env:
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      run: node scripts/check-models.js
      
    - name: Create Issue if models are failing
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = `ðŸš¨ Model Health Check Failed - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Model Health Check Failed
          
          The daily model health check has detected issues with the Groq models.
          
          **Possible causes:**
          - Models have been deprecated/decommissioned
          - API key issues
          - Network connectivity problems
          
          **Action required:**
          1. Check the [Groq Console](https://console.groq.com) for any deprecation notices
          2. Update \`lib/model-config.ts\` with new model names if needed
          3. Test the application after making changes
          4. Close this issue once resolved
          
          **Timestamp:** ${new Date().toISOString()}
          `;
          
          // Check if an issue already exists
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: ['model-health']
          });
          
          if (existingIssues.data.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['model-health', 'bug', 'priority-high']
            });
          }